name: "Get version"
description: "Get project version from a file"
inputs:
    file_to_read:
        description: "File that contains project version."
        required: true
    line_pattern:
        description: "RegEx pattern to a line, that contains a project version."
        required: true
    version_pattern:
        description: 'RegEx pattern to a version. Default value is "[0-9]\+\.[0-9]\+\.[0-9]\+".'
        default: '[0-9]\+\.[0-9]\+\.[0-9]\+'
    custom_command:
        description: "Execute your own command to determine project version. When using this the following inputs are ignored: line_pattern, version_pattern."
        default: ""
    repo:
        description: "Repository name with owner. Default value is the current repository."
        default: ${{ github.repository }}
    checkout:
        description: "Whether or not to checkout the file. Default value is false."
        type: boolean
        default: false
    tag_prefix:
        description: "Tag prefix to search for existing tags. Default value is 'v'."
        default: "v"
    tag_postfix:
        description: "Tag postfix to search for existing tags. Default value is ''."
        default: ""
outputs:
    project_version:
        description: "Project version."
        value: ${{steps.get_version.outputs.project_version}}
    exists:
        description: "Returns true if tag with the current version already exists."
        value: ${{steps.check_tag.outputs.exists}}
runs:
    using: "composite"
    steps:
        - name: Checkout
          if: ${{inputs.checkout == 'true'}}
          uses: actions/checkout@v4
          with:
              sparse-checkout: ${{inputs.file_to_read}}
              sparse-checkout-cone-mode: false
              repository: ${{inputs.repo}}

        - name: Get version
          if: ${{inputs.custom_command == ''}}
          id: get_version
          run: |
              PROJECT_VER="$(grep '${{inputs.line_pattern}}' '${{inputs.file_to_read}}' | grep -o '${{inputs.version_pattern}}')"
              PROJECT_VER="project_version=$PROJECT_VER"
              echo $PROJECT_VER >> "$GITHUB_OUTPUT"
              echo $PROJECT_VER
          shell: bash

        - name: Get version custom
          if: ${{inputs.custom_command != ''}}
          id: get_version
          run: |
              PROJECT_VER="$(${{inputs.custom_command}})"
              PROJECT_VER="project_version=$PROJECT_VER"
              echo $PROJECT_VER >> "$GITHUB_OUTPUT"
              echo $PROJECT_VER
          shell: bash

        - name: Check tag
          uses: mukunku/tag-exists-action@v1.6.0
          id: check_tag
          with:
              tag: ${{inputs.tag_prefix}}${{steps.get_version.outputs.project_version}}${{inputs.tag_postfix}}
              repo: ${{inputs.repo}}
